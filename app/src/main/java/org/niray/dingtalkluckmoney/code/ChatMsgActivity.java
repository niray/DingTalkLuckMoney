///**
// * Generated by smali2java 1.0.0.558
// * Copyright (C) 2013 Hensence.com
// */
//
//package com.alibaba.android.dingtalkim.activities;
//
//import android.animation.ObjectAnimator;
//import android.content.BroadcastReceiver;
//import android.content.ClipboardManager;
//import android.content.Context;
//import android.content.DialogInterface;
//import android.content.Intent;
//import android.content.IntentFilter;
//import android.graphics.Bitmap;
//import android.graphics.Rect;
//import android.graphics.Shader;
//import android.graphics.drawable.BitmapDrawable;
//import android.graphics.drawable.Drawable;
//import android.net.Uri;
//import android.net.wifi.WifiInfo;
//import android.net.wifi.WifiManager;
//import android.os.Build;
//import android.os.Bundle;
//import android.os.Handler;
//import android.support.v4.content.LocalBroadcastManager;
//import android.text.Editable;
//import android.text.SpannableString;
//import android.text.SpannableStringBuilder;
//import android.text.TextUtils;
//import android.util.Log;
//import android.view.GestureDetector;
//import android.view.KeyEvent;
//import android.view.LayoutInflater;
//import android.view.Menu;
//import android.view.MenuItem;
//import android.view.MotionEvent;
//import android.view.SubMenu;
//import android.view.View;
//import android.view.ViewGroup;
//import android.view.ViewStub;
//import android.view.ViewTreeObserver;
//import android.view.animation.AlphaAnimation;
//import android.view.animation.Animation;
//import android.view.animation.AnimationUtils;
//import android.view.animation.TranslateAnimation;
//import android.widget.AbsListView;
//import android.widget.AdapterView;
//import android.widget.BaseAdapter;
//import android.widget.GridView;
//import android.widget.ImageView;
//import android.widget.LinearLayout;
//import android.widget.RelativeLayout;
//import android.widget.TextView;
//
//import com.aliaba.android.dingtalk.redpackets.base.models.RedPacketsMessageBodyDo;
//import com.alibaba.android.dingtalk.userbase.ContactInterface;
//import com.alibaba.android.dingtalk.userbase.model.OrganizationSettingsObject;
//import com.alibaba.android.dingtalk.userbase.model.UserIdentityObject;
//import com.alibaba.android.dingtalk.userbase.model.UserProfileObject;
//import com.alibaba.android.dingtalkbase.models.dos.FloatDialogDo;
//import com.alibaba.android.dingtalkbase.models.dos.space.SpaceDo;
//import com.alibaba.android.dingtalkbase.widgets.views.CustomDialog;
//import com.alibaba.android.dingtalkbase.widgets.views.EmotionFooterView;
//import com.alibaba.android.dingtalkbase.widgets.views.InputPanelView;
//import com.alibaba.android.dingtalkbase.widgets.views.RimetListEmptyView;
//import com.alibaba.android.dingtalkbase.widgets.views.swiperefresh.SwipeRefreshLayout;
//import com.alibaba.android.dingtalkim.IMBaseActivity;
//import com.alibaba.android.dingtalkim.base.IMInterface;
//import com.alibaba.android.dingtalkim.base.model.ActivityAction;
//import com.alibaba.android.dingtalkim.imtools.AutoTrigger;
//import com.alibaba.android.dingtalkim.imtools.ChatMsgListView;
//import com.alibaba.android.dingtalkim.models.ChatAddAppModel;
//import com.alibaba.android.dingtalkim.views.IMBanner;
//import com.alibaba.android.dingtalkim.views.MenuInputView;
//import com.alibaba.android.dingtalkim.views.VoiceRecordView;
//import com.alibaba.dingtalk.launcherbase.MainModuleInterface;
//import com.alibaba.doraemon.Doraemon;
//import com.alibaba.doraemon.Priority;
//import com.alibaba.doraemon.image.ImageMagician;
//import com.alibaba.doraemon.statistics.Statistics;
//import com.alibaba.wukong.Callback;
//import com.alibaba.wukong.im.Conversation;
//import com.alibaba.wukong.im.ConversationChangeListener;
//import com.alibaba.wukong.im.ConversationService;
//import com.alibaba.wukong.im.IMEngine;
//import com.alibaba.wukong.im.Message;
//import com.alibaba.wukong.im.MessageListener;
//import com.alibaba.wukong.im.MessageService;
//import com.laiwang.framework.eventbus.EventButler;
//
//import java.util.ArrayList;
//import java.util.HashMap;
//import java.util.Iterator;
//import java.util.LinkedList;
//import java.util.List;
//import java.util.Map;
//import java.util.regex.Matcher;
//import java.util.regex.Pattern;
//
//public class ChatMsgActivity extends IMBaseActivity {
//    private FloatDialogDo A;
//    private Message B;
//    private int C;
//    private String D;
//    private String E;
//    private ChatMsgActivity.b F;
//    private WifiManager G;
//    private WifiInfo H;
//    private aaz I;
//    private aai J;
//    private View K;
//    private long L;
//    private UserProfileObject M;
//    private List<UserIdentityObject> N;
//    private tn.a O;
//    private String P;
//    private Conversation Q;
//    private abk R;
//    private zn S;
//    private abr T;
//    private HashMap<Long, String> U;
//    private boolean V;
//    private boolean W;
//    private boolean X;
//    private long Y;
//    private long Z;
//    private long aa;
//    private int ab;
//    private Runnable ac;
//    private LinkedList<SpaceDo> ad;
//    private Handler ae;
//    private Conversation.TypingCommand af;
//    private ChatMsgActivity.a ag;
//    private ConversationChangeListener ah;
//    private BroadcastReceiver ai;
//    private MessageListener aj;
//    private BroadcastReceiver ak;
//    private ViewTreeObserver.OnGlobalLayoutListener al;
//    private ChatAddAppModel am;
//    private aar an;
//    private ObjectAnimator ao;
//    private String ap;
//    private final int aq;
//    private final int ar;
//    private final int as;
//    private final int at;
//    private final int au;
//    private final int av;
//    private final int aw;
//    private final int ax;
//    private final int ay;
//    public InputPanelView b;
//    ObjectAnimator c;
//    public aag d;
//    ContactInterface e;
//    private ChatMsgActivity h;
//    private LocalBroadcastManager i;
//    private Handler j;
//    private TextView k;
//    private VoiceRecordView l;
//    private RelativeLayout m;
//    private EmotionFooterView n;
//    private GridView o;
//    private ViewGroup p;
//    private int q;
//    private int r;
//    private View s;
//    private xh t;
//    private ChatMsgListView u;
//    private SwipeRefreshLayout v;
//    private RimetListEmptyView w;
//    private abm x;
//    private View y;
//    private IMBanner z;
//
//    public ChatMsgActivity() {
//        j = new Handler();
//        d = 0x0;
//        L = 0x0;
//        U = new HashMap();
//        V = false;
//        W = false;
//        X = false;
//        ab = 0x0;
//        ac = new Runnable(this) {
//
//            1(ChatMsgActivity p1) {
//            }
//
//            public void run() {
//                a.a(a(a));
//            }
//        };
//        ae = new Handler();
//        af = Conversation.TypingCommand.CANCEL;
//        e = ContactInterface.a();
//        ag = new ChatMsgActivity.a(this, 0x0);
//        ah = new ConversationChangeListener(this) {
//
//            12(ChatMsgActivity p1) {
//            }
//
//            public void onTitleChanged(List<Conversation> p1) {
//                // :( Parsing error. Please contact me.
//            }
//
//            public void onStatusChanged(List<Conversation> p1) {
//                // :( Parsing error. Please contact me.
//            }
//
//            public void onTagChanged(List<Conversation> p1) {
//                // :( Parsing error. Please contact me.
//            }
//
//            public void onLocalExtrasChanged(List<Conversation> p1) {
//                // :( Parsing error. Please contact me.
//            }
//
//            public void onTypingEvent(Conversation conversation, Conversation.TypingCommand command, Conversation.TypingType type) {
//                if((command != null) && (command == Conversation.TypingCommand.TYPING) && (conversation != null) && (b(a) != null) && (conversation.conversationId().equals(b(a).conversationId()))) {
//                    a(a, System.currentTimeMillis());
//                    a.mActionBar.setTitle(xa.h.im_typing);
//                    if(e(a) != null) {
//                        e(a).postDelayed(f(a), 0xbb8);
//                    }
//                    return;
//                }
//                if((command != null) && (command == Conversation.TypingCommand.CANCEL) && (conversation != null) && (b(a) != null) && (conversation.conversationId().equals(b(a).conversationId()))) {
//                    if((e(a) != null) && (f(a) != null)) {
//                        e(a).removeCallbacks(f(a));
//                    }
//                    a.a(a(a));
//                }
//            }
//
//            public void onClearMessage(List<Conversation> p1) {
//                // :( Parsing error. Please contact me.
//            }
//
//            public void onAuthorityChanged(List<Conversation> p1) {
//                // :( Parsing error. Please contact me.
//            }
//        };
//        ai = new BroadcastReceiver(this) {
//
//            23(ChatMsgActivity p1) {
//            }
//
//            public void onReceive(Context context, Intent intent) {
//                // :( Parsing error. Please contact me.
//            }
//        };
//        aj = new MessageListener(this) {
//
//            34(ChatMsgActivity p1) {
//            }
//
//            public void onAdded(List<Message> p1, MessageListener.DataType dataType) {
//                // :( Parsing error. Please contact me.
//            }
//
//            public void onRemoved(List<Message> p1) {
//                // :( Parsing error. Please contact me.
//            }
//
//            public void onChanged(List<Message> p1) {
//                // :( Parsing error. Please contact me.
//            }
//        };
//        al = new ViewTreeObserver.OnGlobalLayoutListener(this) {
//            private int b;
//
//            29(ChatMsgActivity p1) {
//            }
//
//            public void onGlobalLayout() {
//                Rect r = new Rect();
//                L(a).getWindowVisibleDisplayFrame(r);
//                int screenHeight = L(a).getRootView().getHeight();
//                int heightDifference = screenHeight - r.bottom;
//                if(heightDifference > 0x12c) {
//                    d(a, heightDifference);
//                    if(b == 0) {
//                        if(M(a) == 0x1) {
//                            N(a).setVisibility(0x8);
//                            a.getWindow().setSoftInputMode(0x12);
//                        }
//                        if(M(a) != 0) {
//                            O(a);
//                        }
//                    }
//                    b = heightDifference;
//                }
//                if(heightDifference == 0) {
//                    if(b != 0) {
//                        if(M(a) == 0x1) {
//                            a.a(true);
//                            I(a);
//                        }
//                        if(M(a) == 0) {
//                            P(a);
//                        }
//                    }
//                    b = heightDifference;
//                }
//            }
//        };
//        aq = 0x1;
//        ar = 0x2;
//        as = 0x3;
//        at = 0x4;
//        au = 0x5;
//        av = 0x6;
//        aw = 0x7;
//        ax = 0x8;
//        ay = 0x9;
//    }
//    private static f = ChatMsgActivity.class.getName();
//    public sta = "empty_" + f;
//    private static final Pattern g = Pattern.compile("@([0-9]+)\\s{1}");
//
//    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
//        if(resultCode == -0x1) {
//            if(requestCode == 0x8) {
//                boolean sendOrigin = data.getBooleanExtra("send_origin_picture", false);
//                ArrayList<String> list = data.getExtras().getStringArrayList("choose_picture_ids");
//                vo.a("im", "ChatMsgActivity", "onResult:ACTION_CHOOSE_FROM_ALBUM");
//                a(list, sendOrigin);
//                return;
//            }
//            if(requestCode == 0x9) {
//                List<IMInterface.SendMessageObject> sendMessageObjects = data.getExtras().getParcelableArrayList("key_send_custom_msg");
//                if(sendMessageObjects != null) {
//                    for(IMInterface.SendMessageObject sendMessageObject : sendMessageObjects) {
//                        IMInterface.a().a(Q, sendMessageObject, 0x0);
//                    }
//                }
//                SpaceDo spaceDo = (SpaceDo)data.getExtras().getSerializable("file_space");
//                if(spaceDo != null) {
//                    IMInterface.SendMessageObject sendMessageObject = new IMInterface.SendMessageObject();
//                    sendMessageObject.messageType = 0x1f4;
//                    sendMessageObject.messageData = spaceDo;
//                    IMInterface.a().a(Q, sendMessageObject, 0x0);
//                }
//            }
//        }
//    }
//
//    private void c(List<Message> p1) {
//        // :( Parsing error. Please contact me.
//    }
//
//    private void w() {
//        if((x != null) && (x.b() != null) && (Q != null)) {
//            if(!x.b().conversationId().equals(Q.conversationId())) {
//                x.d();
//                x = 0x0;
//            }
//        }
//        if(x == null) {
//            x = new abm(Q);
//            x.a(new abm.c(this) {
//
//                45(ChatMsgActivity p1) {
//                }
//
//                public void a(int mode, Object obj) {
//                    if(r(a) != null) {
//                        r(a).setRefreshing(true);
//                    }
//                }
//
//                public void a(int mode, Object obj, boolean should) {
//                    if(r(a) != null) {
//                        r(a).setRefreshing(false);
//                    }
//                }
//
//                public void a(int mode, String code, String reason, Object obj) {
//                    if(r(a) != null) {
//                        r(a).setRefreshing(false);
//                    }
//                }
//
//                public void b(int mode, Object obj) {
//                }
//
//                public void a(int mode, int anchorPosition, Object obj) {
//                    if(("refresh".equals(obj)) || ("load_pre".equals(obj))) {
//                        if(b(a) != null) {
//                            aas.a().a(b(a).conversationId(), g(a).c(), b(a).tag());
//                        }
//                    }
//                    if(h(a) != null) {
//                        h(a).notifyDataSetChanged();
//                    }
//                }
//
//                public void c(int mode, Object obj) {
//                    if(r(a) != null) {
//                        r(a).setRefreshing(false);
//                    }
//                }
//            });
//            return;
//        }
//        if((Q != null) && (x.b() != Q)) {
//            x.a(Q);
//        }
//    }
//
//    private void b(boolean isEnterprise) {
//        mActionBar.setDisplayShowCustomEnabled(isEnterprise);
//        if(t == null) {
//            return;
//        }
//        if((Q != null) && (Q.tag() [cmp] 0x4 != 0)) {
//            if(isEnterprise) {
//                t.a(0x2, true);
//                long orgId = 0x0;
//                if(Q.extension("id") != null) {
//                    orgId = Long.valueOf(Q.extension("id")).longValue();
//                } else if(Q.extension("orgId") != null) {
//                    orgId = Long.valueOf(Q.extension("orgId")).longValue();
//                }
//                t.a(orgId);
//                c(orgId);
//                return;
//            }
//            t.a(0x0, true);
//            c(0x0);
//        }
//    }
//
//    private void a(View v, Drawable wd) {
//        if(v != null) {
//            if(Build.VERSION.SDK_INT >= 0x10) {
//                v.setBackground(wd);
//                return;
//            }
//            v.setBackgroundDrawable(wd);
//        }
//    }
//
//    private void c(long oid) {
//        if(u != null) {
//            if(oid > 0x0) {
//                OrganizationSettingsObject settingsObject = rb.a().c(oid);
//                if((settingsObject != null) && (settingsObject.groupWaterMark)) {
//                    if(!un.b(0x10)) {
//                        Bitmap bitmap = wj.a(this, rb.a().d(oid), rb.a().f(), getResources().getColor(xa.c.uidic_global_color_c5), getResources().getColor(xa.c.window_background));
//                        BitmapDrawable drawable = new BitmapDrawable(bitmap);
//                        drawable.setTileModeXY(Shader.TileMode.REPEAT, Shader.TileMode.REPEAT);
//                        a(u, drawable);
//                        return;
//                    }
//                    wk wd = new wk(this);
//                    wd.d(rb.a().f());
//                    wd.a(rb.a().d(oid));
//                    wd.a(getResources().getColor(xa.c.uidic_global_color_c5));
//                    wd.b(0x0);
//                    a(u, wd);
//                    return;
//                }
//                a(u, 0x0);
//                return;
//            }
//            a(u, 0x0);
//        }
//    }
//
//    private void a(long mid, String cid) {
//        (ConversationService)IMEngine.getIMService(ConversationService.class).getConversation((Callback)EventButler.newCallback(new Callback(this, mid, cid) {
//
//            53(ChatMsgActivity p1, long p2, String p3) {
//            }
//
//            public void a(Conversation conversation) {
//                if(b(c) == null) {
//                    return;
//                }
//                b(c).getMessage(a, (Callback)EventButler.newCallback(new Callback(this, conversation) {
//
//                    1(ChatMsgActivity.53 p1, Conversation p2) {
//                    }
//
//                    public void a(Message message) {
//                        if(message != null) {
//                            Message forWordMsg = message;
//                            if((message.messageContent().type() == 0xc9) || (message.messageContent().type() == 0x65)) {
//                                MessageContent.MultiMessageContent multiMessageContent = (MessageContent.MultiMessageContent)message.messageContent();
//                                if(multiMessageContent.size() > 0) {
//                                    MessageContent.LinkedContent linkedContent = (MessageContent.LinkedContent)multiMessageContent.contents().get(0x0);
//                                    forWordMsg = (MessageBuilder)IMEngine.getIMService(MessageBuilder.class).buildLinkedMessage(linkedContent.url(), linkedContent.title(), linkedContent.text(), linkedContent.picUrl());
//                                }
//                            } else if((message.messageContent().type() == 0x12d) || (message.messageContent().type() == 0x12c)) {
//                                forWordMsg = abp.a(message);
//                            }
//                            if(a.tag() == 0x4) {
//                                (MessageBuilder)IMEngine.getIMService(MessageBuilder.class).appendAttributes(forWordMsg, 0x1);
//                            }
//                            forWordMsg.sendTo(a, (Callback)EventButler.newCallback(new Callback(this) {
//
//                                1(ChatMsgActivity.53.1 p1) {
//                                }
//
//                                public void a(Message message) {
//                                    un.a(xa.h.msg_forward_success);
//                                    a(a.b.c, a.b.b, a.b.a);
//                                }
//
//                                public void onException(String code, String reason) {
//                                    if(!"101008".equals(code)) {
//                                        un.a(a.b.c.getString(xa.h.msg_forward_failed, new Object[] {tf.a().c().a(code, reason)}));
//                                    }
//                                }
//
//                                public void a(Message message, int i) {
//                                }
//                            }, Callback.class, b.c));
//                        }
//                    }
//
//                    public void onException(String s, String s2) {
//                    }
//
//                    public void a(Message message, int i) {
//                    }
//                }, Callback.class, c));
//            }
//
//            public void onException(String code, String reason) {
//                un.a(c.getString(xa.h.msg_forward_failed, new Object[] {tf.a().c().a(code, reason)}));
//            }
//
//            public void a(Conversation conversation, int i) {
//            }
//        }, Callback.class, this), cid);
//    }
//
//    private void x() {
//        if(ak != null) {
//            return;
//        }
//        IntentFilter filter = new IntentFilter();
//        filter.addAction("android.intent.action.SCREEN_OFF");
//        filter.addAction("android.intent.action.CLOSE_SYSTEM_DIALOGS");
//        ak = new BroadcastReceiver(this) {
//
//            54(ChatMsgActivity p1) {
//            }
//
//            public void onReceive(Context context, Intent intent) {
//                if((b(a) != null) && (b(a).tag() == 0x4)) {
//                    a.t();
//                    a.finish();
//                }
//            }
//        };
//        try {
//            registerReceiver(ak, filter);
//            return;
//        } catch(Exception e) {
//            e.printStackTrace();
//        }
//    }
//
//    private void y() {
//        if(ak != null) {
//            unregisterReceiver(ak);
//        }
//    }
//
//    private void a(String cid, long mid) {
//        long receiverId = aan.a(cid);
//        ContactInterface.a().a(receiverId, new uf(this, receiverId, mid) {
//
//            55(ChatMsgActivity p1, long p2, long p3) {
//            }
//
//            public void a(UserProfileObject data) {
//                if((data == null) || (!data.isActive.booleanValue())) {
//                    Log.d(u(), "Should send sms when forward message");
//                    acf.a().c().a(a, b, new uf(this) {
//
//                        1(ChatMsgActivity.55 p1) {
//                        }
//
//                        public void a(Void data) {
//                            Log.d(u(), "sendMessageBySms success");
//                        }
//
//                        public void onException(String code, String reason) {
//                            Log.e(u(), "sendMessageBySms onException code:" + code + " reason:" + reason);
//                        }
//                    });
//                }
//            }
//
//            public void onException(String code, String reason) {
//                Log.e(u(), "checkIfShouldSendMessageBySMS onException code:" + code + " reason:" + reason);
//            }
//        });
//    }
//
//    private void b(String cid) {
//        P = cid;
//        aaj.e().a(cid);
//        if(d != null) {
//            d.a(Q);
//            return;
//        }
//        d = new aag(Q);
//        d.a(new aag.a(this) {
//
//            56(ChatMsgActivity p1) {
//            }
//
//            public void a(Message message) {
//                if(s(a) != null) {
//                    ChatMsgActivity.b.a(s(a), message);
//                }
//            }
//
//            public void a(String code, String reason) {
//            }
//        });
//    }
//
//    protected String a() {
//        return Q.conversationId();
//    }
//
//    protected long b() {
//        return 0x0;
//    }
//
//    public Conversation c() {
//        return Q;
//    }
//
//    public void onCreate(Bundle savedInstanceState) {
//        super.onCreate(savedInstanceState);
//        Statistics statistics = (Statistics)Doraemon.getArtifact("STATISTICS");
//        statistics.endOffLineSubDurationStatistics("chat_load", "to_chatmsg_activity");
//        statistics.startOffLineSubDurationStatistics("chat_load", "chat_activity_onCreate");
//        setContentView(xa.g.layout_chat);
//        if(!un.c(this)) {
//            un.a(xa.h.network_error);
//        }
//        I = new aaz(this);
//        L = tf.a().b().getCurrentUid();
//        x();
//        ImageMagician imageMagician = (ImageMagician)Doraemon.getArtifact("IMAGE");
//        O = (tn.a)EventButler.newCallback(new tn.a(this) {
//
//            2(ChatMsgActivity p1) {
//            }
//
//            public void a(tn.b message) {
//                m(a).post(new Runnable(this, message) {
//
//                    1(ChatMsgActivity.2 p1, tn.b p2) {
//                    }
//
//                    public void run() {
//                        if(h(b.a) != null) {
//                            h(b.a).notifyDataSetChanged();
//                        }
//                        if((a == null) || (a.a == null)) {
//                            return;
//                        }
//                        if((b(b.a) != null) && (b(b.a).type() == 0x1)) {
//                            UserProfileObject messageUser = a.a;
//                            if((messageUser != null) && (t(b.a) != null) && (t(b.a).uid == messageUser.uid)) {
//                                a(b.a, messageUser);
//                                b.a.a(b.a.e.a(t(b.a)));
//                                Intent intent = new Intent("com.workapp.CONVERSATION_NOTICE_CHANGED");
//                                intent.putExtra("cid", b(b.a).conversationId());
//                                intent.putExtra("is_single_chat", true);
//                                LocalBroadcastManager.getInstance(tf.a().b()).sendBroadcast(intent);
//                            }
//                        }
//                    }
//                });
//            }
//        }, tn.a.class, this);
//        ContactInterface.a().c(O);
//        a(getIntent());
//        statistics.endOffLineSubDurationStatistics("chat_load", "chat_activity_onCreate");
//    }
//
//    private void a(Intent intent) {
//        Statistics statistics = (Statistics)Doraemon.getArtifact("STATISTICS");
//        statistics.startOffLineSubDurationStatistics("chat_load", "handle_intent");
//        V = intent.getBooleanExtra("local_contact", false);
//        Log.d(f, "mIsLocalContact:" + V);
//        if(J != null) {
//            J.a(V);
//        }
//        Q = (Conversation)intent.getSerializableExtra("conversation");
//        if(Q != null) {
//            Q.sync();
//        }
//        w();
//        String cid = intent.getStringExtra("conversation_id");
//        if(Q != null) {
//            cid = Q.conversationId();
//        }
//        if(TextUtils.isEmpty(cid)) {
//            try {
//                Uri uri = intent.getData();
//                cid = uri.getQueryParameter("cid");
//            } catch(Exception e) {
//                e.printStackTrace();
//            }
//        }
//        b(cid);
//        long uid = aan.a(cid);
//        try {
//            A = (FloatDialogDo)intent.getParcelableExtra("chat_float_dialog");
//        } catch(Exception localException1) {
//        }
//        i();
//        long anchorId = intent.getLongExtra("anchor_id", 0x0);
//        if(Q == null) {
//            statistics = Doraemon.getArtifact("STATISTICS");
//            statistics.startOffLineSubDurationStatistics("chat_load", "get_conversation");
//            (ConversationService)IMEngine.getIMService(ConversationService.class).getConversation((Callback)EventButler.newCallback(new Callback(this, uid, anchorId) {
//
//                3(ChatMsgActivity p1, long p2, long p3) {
//                }
//
//                public void a(Conversation conversation) {
//                    Statistics statistics = (Statistics)Doraemon.getArtifact("STATISTICS");
//                    statistics.endOffLineSubDurationStatistics("chat_load", "get_conversation");
//                    if(conversation != null) {
//                        a(c, conversation);
//                        u(c);
//                        c(c);
//                        d(c);
//                        a(c, b(c).conversationId());
//                        v(c);
//                        b(c, b(c));
//                        if((a [cmp] 0x0 != 0) && (b(c).latestMessage() != null)) {
//                            c.e.a(a);
//                        }
//                        azf.a().postDelayed(new Runnable(this) {
//
//                            1(ChatMsgActivity.3 p1) {
//                            }
//
//                            public void run() {
//                                w(a.c);
//                            }
//                        }, 0x64);
//                        c.a(b, 0x0, false);
//                        c.o();
//                        c(c, conversation);
//                        x(c);
//                        return;
//                    }
//                    un.a(xa.h.conversation_not_found);
//                    c.finish();
//                }
//
//                public void onException(String s, String s2) {
//                    Statistics statistics = (Statistics)Doraemon.getArtifact("STATISTICS");
//                    statistics.endOffLineSubDurationStatistics("chat_load", "get_conversation");
//                }
//
//                public void a(Conversation conversation, int i) {
//                }
//            }, Callback.class, this), cid);
//        } else {
//            A();
//            a(Q);
//            Z();
//            D();
//            c(Q);
//            if((uid [cmp] 0x0 != 0) && (Q.latestMessage() != null)) {
//                e.a(uid);
//            } else {
//                a(anchorId, 0x0, false);
//                z();
//            }
//        }
//        (ConversationService)IMEngine.getIMService(ConversationService.class).addConversationChangeListener(ah);
//        I();
//        E();
//        statistics.endOffLineSubDurationStatistics("chat_load", "handle_intent");
//    }
//
//    private void z() {
//        if(T != null) {
//            T.a();
//            T = 0x0;
//        }
//        T = new abr(this, Q, b, (MenuInputView)findViewById(xa.f.menu_input_view));
//    }
//
//    private void A() {
//        if(Q != null) {
//            if(R != null) {
//                R.b();
//            }
//            R = new abk(this, Q);
//        }
//    }
//
//    private void a(Conversation conversation) {
//        if(conversation.tag() == 0x2) {
//            if(conversation.extension("deptId") != null) {
//                if(vl.b(this, "first_enter_enterprise_conv", true)) {
//                    vl.a(this, "first_enter_enterprise_conv", false);
//                    CustomDialog customDialog = new CustomDialog(this);
//                    customDialog.a(xa.e.dept_conv_guide);
//                    customDialog.c(getString(xa.h.guide_enterprise_dept_tips));
//                    customDialog.a(false);
//                    customDialog.a(getString(xa.h.org_conv));
//                    customDialog.e(getString(xa.h.guide_more));
//                    customDialog.a(new View.OnClickListener(this, customDialog) {
//
//                        4(ChatMsgActivity p1, CustomDialog p2) {
//                        }
//
//                        public void onClick(View v) {
//                            a.dismiss();
//                            aqf.a().a(b, "http://s.dingtalk.com/market/dingtalk/orggroupintro.php", 0x0);
//                        }
//                    });
//                    customDialog.b(new View.OnClickListener(this, customDialog) {
//
//                        5(ChatMsgActivity p1, CustomDialog p2) {
//                        }
//
//                        public void onClick(View v) {
//                            a.dismiss();
//                        }
//                    });
//                    if(un.c()) {
//                        customDialog.b(xa.e.enterprise_dept_cornor_icon_for_session_fragment);
//                    } else {
//                        customDialog.b(xa.e.enterprise_dept_cornor_icon_for_session_fragment_en);
//                    }
//                    customDialog.d(getString(xa.h.guide_text_i_know_that));
//                    azf.a().postDelayed(new Runnable(this, customDialog) {
//
//                        6(ChatMsgActivity p1, CustomDialog p2) {
//                        }
//
//                        public void run() {
//                            a.show();
//                        }
//                    }, 0x1f4);
//                }
//                return;
//            }
//            if(vl.b(this, "first_enter_enterprise_conv", true)) {
//                vl.a(this, "first_enter_enterprise_conv", false);
//                CustomDialog customDialog = new CustomDialog(this);
//                customDialog.a(xa.e.enterprise_conv_guide);
//                customDialog.c(getString(xa.h.guide_enterprise_conv_tips));
//                customDialog.a(false);
//                customDialog.a(getString(xa.h.org_conv));
//                customDialog.e(getString(xa.h.guide_more));
//                customDialog.a(new View.OnClickListener(this, customDialog) {
//
//                    7(ChatMsgActivity p1, CustomDialog p2) {
//                    }
//
//                    public void onClick(View v) {
//                        a.dismiss();
//                        aqf.a().a(b, "http://s.dingtalk.com/market/dingtalk/orggroupintro.php", 0x0);
//                    }
//                });
//                customDialog.b(new View.OnClickListener(this, customDialog) {
//
//                    8(ChatMsgActivity p1, CustomDialog p2) {
//                    }
//
//                    public void onClick(View v) {
//                        a.dismiss();
//                    }
//                });
//                if(un.c()) {
//                    customDialog.b(xa.e.enterprise_cornor_icon_for_session_fragment);
//                } else {
//                    customDialog.b(xa.e.enterprise_cornor_icon_for_session_fragment_en);
//                }
//                customDialog.d(getString(xa.h.guide_text_i_know_that));
//                azf.a().postDelayed(new Runnable(this, customDialog) {
//
//                    9(ChatMsgActivity p1, CustomDialog p2) {
//                    }
//
//                    public void run() {
//                        a.show();
//                    }
//                }, 0x1f4);
//            }
//        }
//    }
//
//    public void onAttachedToWindow() {
//        super.onAttachedToWindow();
//        B();
//        ActivityAction action = (ActivityAction)getIntent().getSerializableExtra("attach_window_action");
//        if(action != null) {
//            action.doAction(this);
//        }
//    }
//
//    private void B() {
//        if((Q != null) && (Q.tag() == 0x4)) {
//            if(!aas.a().e()) {
//                aas.a().f();
//            }
//            boolean isShow = vl.b(this, "pref_burn_dialog_showed", false);
//            if(!isShow) {
//                vl.a(this, "pref_burn_dialog_showed", true);
//                CustomDialog dialog = new CustomDialog(this);
//                dialog.d(getString(xa.h.start_chat));
//                dialog.a(getString(xa.h.safe_chat_model));
//                dialog.b(getString(xa.h.enter_safe_chat_model_2));
//                dialog.c(getString(xa.h.burn_chat_tip));
//                dialog.a(xa.e.chat_safe_model_lock);
//                dialog.e(getString(xa.h.guide_more));
//                dialog.a(new View.OnClickListener(this, dialog) {
//
//                    10(ChatMsgActivity p1, CustomDialog p2) {
//                    }
//
//                    public void onClick(View v) {
//                        a.dismiss();
//                        aqf.a().a(b, "http://s.dingtalk.com/market/dingtalk/secret-chat.html", 0x0);
//                    }
//                });
//                dialog.show();
//            }
//        }
//    }
//
//    private void C() {
//        if((j == null) || (Q != null) && (Q.isUnreadCountFromServer())) {
//            return;
//        }
//        j.postDelayed(new Runnable(this) {
//
//            11(ChatMsgActivity p1) {
//            }
//
//            public void run() {
//                if((!a.isDestroyed()) && (b(a) != null) && (g(a) != null) && (g(a).c() != null) && (g(a).c().size() > 0) && (o(a) != null)) {
//                    if((g(a).a()) && (y(a) > 0)) {
//                        Message bottomMessage = (Message)g(a).c().get((g(a).c().size() - 0x1));
//                        bottomMessage.getOffsetMessage(-(y(a) - 0x1), Message.CreatorType.SELF, true, (Callback)EventButler.newCallback(new Callback(this, bottomMessage) {
//
//                            1(ChatMsgActivity.11 p1, Message p2) {
//                            }
//
//                            public void a(Message lastUnreadMessage) {
//                                if(!b.a.isDestroyed()) {
//                                    int bottomPosition = o(b.a).getLastVisibleDataPosition();
//                                    int topPosition = o(b.a).getFirstVisibleDataPosition();
//                                    if((y(b.a) > ((bottomPosition - topPosition) + 0x1)) && (y(b.a) > 0x9)) {
//                                        int unreadCount = y(b.a);
//                                        if(lastUnreadMessage != null) {
//                                            if(h(b.a) != null) {
//                                                h(b.a).a(lastUnreadMessage);
//                                            }
//                                            if((!TextUtils.isEmpty(z(b.a))) && (!TextUtils.isEmpty(A(b.a))) && ("at".equals(z(b.a))) || ("special".equals(z(b.a)))
//                                                    || "announce".equals(z(b.a))) {
//                                                long anchorMessageId = 0x0;
//                                                try {
//                                                    anchorMessageId = Long.valueOf(A(b.a)).longValue();
//                                                } catch(Exception e) {
//                                                    e.printStackTrace();
//                                                }
//                                                b(b.a).getMessage(anchorMessageId, (Callback)EventButler.newCallback(new Callback(this, bottomPosition, topPosition, unreadCount, lastUnreadMessage) {
//
//                                                    1(ChatMsgActivity.11.1 p1, int p2, int p3, int p4, Message p5) {
//                                                    }
//
//                                                    public void a(Message msg) {
//                                                        if((!e.b.a.isDestroyed()) && (msg != null)) {
//                                                            e.a.compareOffset(msg, 0x0, (Callback)EventButler.newCallback(new Callback(this, msg) {
//
//                                                                1(ChatMsgActivity.11.1.1 p1, Message p2) {
//                                                                }
//
//                                                                public void a(Integer offset) {
//                                                                    if((!b.e.b.a.isDestroyed()) && (offset != null)) {
//                                                                        if(offset.intValue() > (b.a - b.b)) {
//                                                                            if("at".equals(z(b.e.b.a))) {
//                                                                                a(b.e.b.a, b.e.b.a.getString(xa.h.notification_at_title), a);
//                                                                                return;
//                                                                            }
//                                                                            if("special".equals(z(b.e.b.a))) {
//                                                                                a(b.e.b.a, b.e.b.a.getString(xa.h.tip_special), a);
//                                                                                return;
//                                                                            }
//                                                                            if("announce".equals(z(b.e.b.a))) {
//                                                                                a(b.e.b.a, b.e.b.a.getString(xa.h.announce_group), a);
//                                                                            }
//                                                                            return;
//                                                                        }
//                                                                        a(b.e.b.a, b.e.b.a.getString(xa.h.chat_unread_message_tip, new Object[] {Integer.valueOf(b.c)}), b.d);
//                                                                    }
//                                                                }
//
//                                                                public void onException(String code, String reason) {
//                                                                }
//
//                                                                public void a(Integer data, int progress) {
//                                                                }
//                                                            }, Callback.class, e.b.a));
//                                                        }
//                                                    }
//
//                                                    public void onException(String code, String reason) {
//                                                    }
//
//                                                    public void a(Message data, int progress) {
//                                                    }
//                                                }, Callback.class, b.a));
//                                            } else {
//                                                a(b.a, b.a.getString(xa.h.chat_unread_message_tip, new Object[] {Integer.valueOf(y(b.a))}), lastUnreadMessage);
//                                            }
//                                        }
//                                    }
//                                    c(b.a, 0x0);
//                                }
//                            }
//
//                            public void onException(String code, String reason) {
//                            }
//
//                            public void a(Message data, int progress) {
//                            }
//                        }, Callback.class, a));
//                    }
//                }
//            }
//        }, 0x1f4);
//    }
//
//    private void a(String text, Message msg) {
//        if((!TextUtils.isEmpty(text)) && (msg != null)) {
//            B = msg;
//            TextView unreadTip = (TextView)findViewById(xa.f.unread_tip_button);
//            unreadTip.setText(text);
//            unreadTip.setOnClickListener(new View.OnClickListener(this, msg) {
//
//                13(ChatMsgActivity p1, Message p2) {
//                }
//
//                public void onClick(View v) {
//                    b.a(a);
//                }
//            });
//            if(c != null) {
//                c.cancel();
//                c = 0x0;
//            }
//            if(unreadTip.getVisibility() == 0x4) {
//                unreadTip.setVisibility(0x0);
//                unreadTip.setTranslationX((float)unreadTip.getWidth());
//            }
//            c = ObjectAnimator.ofFloat(unreadTip, "translationX", new float[] {unreadTip.getTranslationX(), 0x0});
//            c.setDuration(0xc8);
//            c.start();
//        }
//    }
//
//    protected void d() {
//        TextView unreadTip = (TextView)findViewById(xa.f.unread_tip_button);
//        if(c != null) {
//            c.cancel();
//            c = 0x0;
//        }
//        c = ObjectAnimator.ofFloat(unreadTip, "translationX", new float[] {unreadTip.getTranslationX(), (float)unreadTip.getWidth()});
//        c.setDuration(0xc8);
//        c.start();
//        B = 0x0;
//    }
//
//    protected xh a(List<Message> p1, int conversationType, long conversationTag) {
//        // :( Parsing error. Please contact me.
//    }
//
//    class b {
//        private boolean b;
//        private Message c;
//        private View d;
//        private boolean e;
//
//        private b(ChatMsgActivity p1) {
//        }
//
//        private void a(AbsListView view, int firstVisibleItem, int visibleItemCount, int totalItemCount) {
//            if((!b) && (c != null)) {
//                a();
//            }
//        }
//
//        private void a(Message message) {
//            if((!b) && (c == null) && (message != null)) {
//                if(message.unReadCount() != 0) {
//                    d(message);
//                }
//            }
//        }
//
//        private void b(Message message) {
//            if((!b) && (c != null) && (message != null)) {
//                if(message.status() == Message.MessageStatus.SENT) {
//                    if(c.equals(message)) {
//                        c = message;
//                        if(message.unReadCount() == 0) {
//                            d();
//                        }
//                        if(message.privateTag() == vb.a.longValue()) {
//                            d();
//                        }
//                    }
//                }
//            }
//        }
//
//        private void c(Message message) {
//            if((!b) && (c != null) && (message != null)) {
//                if(c.equals(message)) {
//                    d();
//                }
//            }
//        }
//
//        private void d(Message message) {
//            if((!b) && (c == null)) {
//                c = message;
//                a();
//                vl.a(a, vb.n, true);
//            }
//        }
//
//        private void a() {
//            if((!b) && (c != null) && (g(a) != null) && (localChatMsgListView1.c() != null) && (o(a) != null)) {
//                if(d == null) {
//                    d = View.inflate(a, xa.g.small_text_tip, 0x0);
//                    d.setOnClickListener(xa.f.list_container);
//                    (TextView)d.findViewById(xa.f.small_text_tip_textview).setText(xa.h.chat_unread_member_tip);
//                    ViewGroup listContainer = (ViewGroup)a.findViewById(xa.f.list_container);
//                    listContainer.addView(d);
//                    Handler handler = new Handler();
//                    handler.postDelayed(localChatMsgActivity.b.22, 0x1f4);
//                }
//                int index = abm.a(localChatMsgListView1.c(), c);
//                View itemView = o(a).a(index);
//                if(itemView != null) {
//                    View unreadButton = itemView.findViewById(xa.f.chatting_unreadcount_tv1);
//                    View otherTipView = itemView.findViewById(xa.f.rl_tips);
//                    float tipX = -0x39e3c000;
//                    float tipY = -0x39e3c000;
//                    if((unreadButton != null) && (localChatMsgListView1.getWidth() > 0) && (localChatMsgListView1.getHeight() > 0)) {
//                        Rect unreadButtonRect = new Rect();
//                        unreadButton.getGlobalVisibleRect(unreadButtonRect);
//                        Rect itemViewRect = new Rect();
//                        itemView.getGlobalVisibleRect(itemViewRect);
//                        tipX = (float)((unreadButtonRect.left - itemViewRect.left) - ((xa.d.small_text_tip_screen_padding.getWidth() - unreadButton.getWidth()) / 0x2));
//                        tipY = (float)(((itemView.getHeight() - xa.d.small_text_tip_screen_padding.getHeight()) - unreadButton.getHeight()) - (ViewGroup.MarginLayoutParams)unreadButton.getLayoutParams().bottomMargin);
//                        if((otherTipView != null) && (otherTipView.getVisibility() != 0x8)) {
//                            tipY = tipY - (float)((ViewGroup.MarginLayoutParams)otherTipView.getLayoutParams().topMargin + (otherTipView.getHeight() + (ViewGroup.MarginLayoutParams)otherTipView.getLayoutParams().bottomMargin));
//                        }
//                        float tipScreenPadding = localChatMsgListView1.getResources().getDimension(xa.d.small_text_tip_screen_padding);
//                        if(tipX < tipScreenPadding) {
//                            float diff = tipScreenPadding - tipX;
//                            View arrow = d.findViewById(xa.f.small_text_tip_arrow);
//                            float diffLimit = (float)((localChatMsgListView1.getWidth() - arrow.getWidth()) / 0x2);
//                            if(diff > diffLimit) {
//                                diff = diffLimit;
//                            }
//                            tipX += diff;
//                            arrow.setTranslationX(-diff);
//                        }
//                    }
//                    d.setTranslationX(tipX);
//                    d.setTranslationY((itemView.getY() + tipY));
//                    b();
//                    return;
//                }
//                c();
//                return;
//            }
//            c();
//        }
//
//        private void b() {
//            if(d != null) {
//                d.setVisibility(0x0);
//                if((!e) && (d.getWidth() > 0) && (d.getHeight() > 0)) {
//                    Animation anim = AnimationUtils.loadAnimation(a, xa.a.alpha_pop);
//                    d.findViewById(xa.f.small_text_tip).startAnimation(anim);
//                    e = true;
//                }
//            }
//        }
//
//        private void c() {
//            if(d != null) {
//                d.setVisibility(0x8);
//            }
//        }
//
//        private void d() {
//            b = true;
//            if((e) && (d != null)) {
//                Animation anim = AnimationUtils.loadAnimation(a, xa.a.alpha_out);
//                anim.setAnimationListener(new Animation.AnimationListener(this) {
//
//                    3(ChatMsgActivity.b p1) {
//                    }
//
//                    public void onAnimationStart(Animation animation) {
//                    }
//
//                    public void onAnimationEnd(Animation animation) {
//                        if(!a.a.isDestroyed()) {
//                            ChatMsgActivity.b.d(a);
//                        }
//                    }
//
//                    public void onAnimationRepeat(Animation animation) {
//                    }
//                });
//                d.findViewById(xa.f.small_text_tip).startAnimation(anim);
//                e = false;
//            }
//        }
//    }
//
//    protected xb.b e() {
//        return new xb.b(this) {
//
//            14(ChatMsgActivity p1) {
//            }
//
//            public void a(int position, Message data, View view) {
//                if((B(a) != null) && (B(a).equals(data))) {
//                    a.d();
//                }
//                if((data != null) && (data.messageContent().type() == 0x2bc)) {
//                    b(a, data.messageId());
//                }
//            }
//
//            public void a(Message message, boolean isOTO) {
//                if(s(a) != null) {
//                    ChatMsgActivity.b.b(s(a), message);
//                }
//            }
//
//            public void b(Message message, boolean isOTO) {
//                if(s(a) != null) {
//                    ChatMsgActivity.b.c(s(a), message);
//                }
//            }
//
//            public void a(Message message, xb.a clickedItem) {
//                if(clickedItem != null) {
//                    if(clickedItem.d == xb.a.c) {
//                        (Statistics)Doraemon.getArtifact("STATISTICS").recordStatistics(0x201, "mail_chat_transmit_click", new String[0x0]);
//                        MailInterface.k().a(a, (MailDo)clickedItem.e, 0x3);
//                        return;
//                    }
//                    if(clickedItem.d == xb.a.a) {
//                        (Statistics)Doraemon.getArtifact("STATISTICS").recordStatistics(0x201, "mail_chat_reply_click", new String[0x0]);
//                        MailInterface.k().a(a, (MailDo)clickedItem.e, 0x1);
//                        return;
//                    }
//                    if(clickedItem.d == xb.a.b) {
//                        (Statistics)Doraemon.getArtifact("STATISTICS").recordStatistics(0x201, "mail_chat_replyall_click", new String[0x0]);
//                        MailInterface.k().a(a, (MailDo)clickedItem.e, 0x2);
//                    }
//                }
//            }
//        };
//    }
//
//    protected void a(long anchorId, long senderId, boolean realRefresh) {
//        Statistics statistics = (Statistics)Doraemon.getArtifact("STATISTICS");
//        statistics.startOffLineSubDurationStatistics("chat_load", "load_message");
//        if((x != null) && (Q != null)) {
//            if((anchorId [cmp] 0x0 == 0) || (realRefresh != null)) {
//                if((!G()) || (Q.latestMessage() == null) || (realRefresh != null)) {
//                    x.a(new abm.c(this, statistics) {
//
//                        15(ChatMsgActivity p1, Statistics p2) {
//                        }
//
//                        public void a(int mode, Object obj) {
//                            c(b, b(b).unreadMessageCount());
//                            b(b).resetUnreadCount();
//                            if(b(b).localExtras() != null) {
//                                b(b, (String)b(b).localExtras().get("anchorType"));
//                                c(b, (String)b(b).localExtras().get("anchorMessageId"));
//                                d(b, b(b));
//                            }
//                        }
//
//                        public void a(int mode, Object obj, boolean should) {
//                            C(b);
//                            if(should) {
//                                b(b, true);
//                            }
//                            a.endOffLineSubDurationStatistics("chat_load", "load_message");
//                            a.endOffLineDurationStatistics("chat_load");
//                            a.endDurationStatistics("DD", "chat_load", "totalTime");
//                        }
//
//                        public void a(int mode, String code, String reason, Object obj) {
//                            a.removeOffLineDurationStatistics("chat_load");
//                            un.a(code, reason);
//                        }
//
//                        public void b(int mode, Object obj) {
//                        }
//
//                        public void a(int mode, int anchorPosition, Object obj) {
//                            if(o(b) != null) {
//                                o(b).a(false, true);
//                            }
//                        }
//
//                        public void c(int mode, Object obj) {
//                        }
//                    }, senderId, true, "refresh");
//                    return;
//                }
//                int unreadCount = Q.unreadMessageCount();
//                Q.resetUnreadCount();
//                Message lastMsg = Q.latestMessage();
//                lastMsg.getOffsetMessage(-(unreadCount - 0x1), Message.CreatorType.SELF, true, (Callback)EventButler.newCallback(new Callback(this, unreadCount) {
//
//                    16(ChatMsgActivity p1, int p2) {
//                    }
//
//                    public void a(Message data) {
//                        if((!b.isDestroyed()) && (g(b) != null)) {
//                            if(data != null) {
//                                g(b).a(data, new abm.c(this, data) {
//
//                                    1(ChatMsgActivity.16 p1, Message p2) {
//                                    }
//
//                                    public void a(int mode, Object obj) {
//                                        if(b(b.b) != null) {
//                                            c(b.b, b(b.b).unreadMessageCount());
//                                            b(b.b).resetUnreadCount();
//                                            if(b(b.b).localExtras() != null) {
//                                                b(b.b, (String)b(b.b).localExtras().get("anchorType"));
//                                                c(b.b, (String)b(b.b).localExtras().get("anchorMessageId"));
//                                                d(b.b, b(b.b));
//                                            }
//                                        }
//                                    }
//
//                                    public void a(int mode, Object obj, boolean should) {
//                                        if(b.a > 0x9) {
//                                            if(h(b.b) != null) {
//                                                h(b.b).a(a);
//                                            }
//                                        }
//                                    }
//
//                                    public void a(int mode, String code, String reason, Object obj) {
//                                        un.a(code, reason);
//                                    }
//
//                                    public void b(int mode, Object obj) {
//                                    }
//
//                                    public void a(int mode, int anchorPosition, Object obj) {
//                                        if(o(b.b) != null) {
//                                            o(b.b).a(anchorPosition, 0x0, false, true);
//                                        }
//                                    }
//
//                                    public void c(int mode, Object obj) {
//                                    }
//                                }, true, "jump");
//                                return;
//                            }
//                            b.a(0x0, 0x0, true);
//                        }
//                    }
//
//                    public void onException(String s, String s1) {
//                    }
//
//                    public void a(Message message, int i) {
//                    }
//                }, Callback.class, this));
//                return;
//            }
//            Q.getMessage(anchorId, (Callback)EventButler.newCallback(new Callback(this) {
//
//                17(ChatMsgActivity p1) {
//                }
//
//                public void a(Message data) {
//                    if((!a.isDestroyed()) && (g(a) != null)) {
//                        if(data != null) {
//                            g(a).a(data, new abm.c(this) {
//
//                                1(ChatMsgActivity.17 p1) {
//                                }
//
//                                public void a(int mode, Object obj) {
//                                    if(b(a.a) != null) {
//                                        c(a.a, b(a.a).unreadMessageCount());
//                                        b(a.a).resetUnreadCount();
//                                        if(b(a.a).localExtras() != null) {
//                                            b(a.a, (String)b(a.a).localExtras().get("anchorType"));
//                                            c(a.a, (String)b(a.a).localExtras().get("anchorMessageId"));
//                                            d(a.a, b(a.a));
//                                        }
//                                    }
//                                }
//
//                                public void a(int mode, Object obj, boolean should) {
//                                }
//
//                                public void a(int mode, String code, String reason, Object obj) {
//                                    un.a(code, reason);
//                                }
//
//                                public void b(int mode, Object obj) {
//                                }
//
//                                public void a(int mode, int anchorPosition, Object obj) {
//                                    if(o(a.a) != null) {
//                                        o(a.a).a(anchorPosition, 0x0, false, true);
//                                    }
//                                }
//
//                                public void c(int mode, Object obj) {
//                                }
//                            }, true, "jump");
//                            return;
//                        }
//                        a.a(0x0, 0x0, true);
//                    }
//                }
//
//                public void onException(String code, String reason) {
//                    un.a(code, reason);
//                }
//
//                public void a(Message data, int progress) {
//                }
//            }, Callback.class, this));
//        }
//    }
//
//    private void D() {
//        if((x != null) && (u != null)) {
//            int conversationType = P.contains(":") ? 0x1 : 0x2;
//            t = a(x.c(), conversationType, Q.tag());
//            u.setAdapter(t);
//            t.a(u.getListView());
//            J = aai.a(this, u.getListView(), t, b.getVoiceButton(), l);
//            J.a(V);
//            J.a();
//            J.b(G());
//            if((conversationType == 0x2) && (!vl.b(this, vb.n, false)) && (Q != null) && (Q.getGroupLevel() == 0) && (Q.tag() [cmp] 0x8 != 0)) {
//                F = new ChatMsgActivity.b(this, 0x0);
//            }
//        }
//    }
//
//    private void E() {
//        G = (WifiManager)getSystemService("wifi");
//        try {
//            H = G.getConnectionInfo();
//            return;
//        } catch(Exception e) {
//            e.printStackTrace();
//        }
//    }
//
//    private void F() {
//        if(t != null) {
//            t.notifyDataSetChanged();
//        }
//    }
//
//    private void b(Conversation conversaion) {
//        if(conversaion == null) {
//            return;
//        }
//        Map<String, String> localExtra = conversaion.localExtras();
//        if(localExtra != null) {
//            localExtra.remove("anchorType");
//            localExtra.remove("anchorMessageId");
//            localExtra.remove("messageCreateTime");
//            conversaion.updateLocalExtras(localExtra);
//        }
//    }
//
//    protected void onResume() {
//        super.onResume();
//        Statistics statistics = (Statistics)Doraemon.getArtifact("STATISTICS");
//        statistics.startOffLineSubDurationStatistics("chat_load", "chat_activity_onResume");
//        aaj.e().b();
//        if(!TextUtils.isEmpty(P)) {
//            aaj.e().a(P);
//        }
//        if((x != null) && (x.c() != null) && (Q != null) && (x.c().size() > 0)) {
//            (ConversationService)IMEngine.getIMService(ConversationService.class).getConversation((Callback)EventButler.newCallback(new Callback(this) {
//
//                18(ChatMsgActivity p1) {
//                }
//
//                public void a(Conversation conversation) {
//                    if(conversation != null) {
//                        c(a, conversation.unreadMessageCount());
//                        conversation.resetUnreadCount();
//                        if(b(a).localExtras() != null) {
//                            b(a).sync();
//                            b(a, (String)b(a).localExtras().get("anchorType"));
//                            c(a, (String)b(a).localExtras().get("anchorMessageId"));
//                            d(a, b(a));
//                        }
//                        return;
//                    }
//                    un.a(xa.h.conversation_not_found);
//                    a.finish();
//                }
//
//                public void onException(String s, String s2) {
//                }
//
//                public void a(Conversation conversation, int i) {
//                }
//            }, Callback.class, this), Q.conversationId());
//        }
//        aa = System.currentTimeMillis();
//        vm.f("session_list", "end :" + System.currentTimeMillis());
//        statistics.endOffLineSubDurationStatistics("chat_load", "chat_activity_onResume");
//        aas.a().c();
//        ag.a();
//    }
//
//    protected void onPause() {
//        super.onPause();
//        a(false);
//        X();
//        aaj.e().c();
//    }
//
//    private boolean G() {
//        return ((Q != null) && (Q.tag() == 0x4));
//    }
//
//    protected boolean f() {
//        return false;
//    }
//
//    public void g() {
//        MainModuleInterface.j().a(this, (!G()), f(), true, a, 0x8, true, true);
//    }
//
//    private void a(List<String> p1, boolean sendOrigin) {
//        // :( Parsing error. Please contact me.
//    }
//
//    private void H() {
//        Statistics statistics = (Statistics)Doraemon.getArtifact("STATISTICS");
//        statistics.startOffLineDurationStatistics("sendImage");
//        statistics.startDurationStatistics("DD", "sendImage", "totalTime");
//        vm.f("sendImage", "sending(\u53d1\u9001\u56fe\u7247-\u56fe\u7247\u6210\u529f) start :" + System.currentTimeMillis());
//    }
//
//    public void h() {
//        if((u != null) && (x != null)) {
//            if(x.a()) {
//                u.a();
//                u.a(false, true);
//                return;
//            }
//            x.a(new abm.c(this) {
//
//                20(ChatMsgActivity p1) {
//                }
//
//                public void a(int mode, Object obj) {
//                }
//
//                public void a(int mode, Object obj, boolean should) {
//                }
//
//                public void a(int mode, String code, String reason, Object obj) {
//                    un.a(code, reason);
//                }
//
//                public void b(int mode, Object obj) {
//                }
//
//                public void a(int mode, int anchorPosition, Object obj) {
//                    if(o(a) != null) {
//                        o(a).a();
//                        o(a).a(false, true);
//                    }
//                }
//
//                public void c(int mode, Object obj) {
//                }
//            }, true, "refresh");
//        }
//    }
//
//    private void I() {
//        IntentFilter filter = new IntentFilter();
//        filter.addAction("finish_chat");
//        filter.addAction("com.workapp.choose.people.from.group.member");
//        filter.addAction("com.workapp.ding.settings");
//        filter.addAction("com.workapp.conversation.FORWARD");
//        filter.addAction("com.workapp.conversation.title.CHANGED");
//        filter.addAction("com.workapp.msg.at");
//        filter.addAction("com.workapp.CONVERSATION_ENTERPRISE_CHANGED");
//        filter.addAction("com.workapp.msg.update");
//        filter.addAction("com.workapp.msg.sender.update");
//        filter.addAction("com.workapp.msg.send");
//        filter.addAction("com.workapp.choose.people.from.contact");
//        i = LocalBroadcastManager.getInstance(this);
//        i.unregisterReceiver(ai);
//        i.registerReceiver(ai, filter);
//        (MessageService)IMEngine.getIMService(MessageService.class).addMessageListener(aj);
//    }
//
//    public void onWindowFocusChanged(boolean hasFocus) {
//        super.onWindowFocusChanged(hasFocus);
//    }
//
//    public void i() {
//        O();
//        v = (SwipeRefreshLayout)findViewById(xa.f.swipe_layout);
//        v.setOnRefreshListener(new SwipeRefreshLayout.b(this) {
//
//            21(ChatMsgActivity p1) {
//            }
//
//            public void h_() {
//                a.a(a.b());
//            }
//        });
//        w = (RimetListEmptyView)findViewById(xa.f.list_empty_view);
//        w.setEmptyImageResource(xa.e.icon_no_conversation_result);
//        w.setEmptyTextContent(xa.h.message_no_result);
//        w.setEmptyDescription(xa.h.empty_conversation_desc);
//        w.findViewById(xa.f.btn_empty_action).setVisibility(0x8);
//        v.setColorScheme(new int[] {xa.c.swipe_refresh_color1, xa.c.swipe_refresh_color2, xa.c.swipe_refresh_color1, xa.c.swipe_refresh_color2});
//        s = LayoutInflater.from(this).inflate(xa.g.actbar_custom_img_view, 0x0);
//        mActionBar.setCustomView(s);
//        u = (ChatMsgListView)findViewById(xa.f.list_content);
//        u.setEmptyView(w);
//        N();
//        J();
//        h = this;
//        l();
//    }
//
//    public void j() {
//        if((getWindow() != null) && (getWindow().getDecorView() != null)) {
//            if(K == null) {
//                ViewGroup root = (ViewGroup)getWindow().getDecorView();
//                if(root != null) {
//                    K = new View(this);
//                    K.setBackgroundColor(0xff000000);
//                    K.setClickable(true);
//                    ViewGroup.LayoutParams params = new ViewGroup.LayoutParams(-0x1, -0x1);
//                    K.setLayoutParams(params);
//                    root.addView(K);
//                }
//            } else {
//                K.setVisibility(0x0);
//            }
//            getWindow().getDecorView().setSystemUiVisibility(0x4);
//        }
//    }
//
//    public void k() {
//        if(K != null) {
//            K.setVisibility(0x8);
//            if((getWindow() != null) && (getWindow().getDecorView() != null)) {
//                getWindow().getDecorView().setSystemUiVisibility(0x0);
//            }
//        }
//    }
//
//    protected void l() {
//    }
//
//    protected void a(List<Message> p1, MessageListener.DataType dataType) {
//        // :( Parsing error. Please contact me.
//    }
//
//    protected void a(List<Message> p1) {
//        // :( Parsing error. Please contact me.
//    }
//
//    protected void b(List<Message> p1) {
//        // :( Parsing error. Please contact me.
//    }
//
//    public UserProfileObject m() {
//        return M;
//    }
//
//    private void J() {
//        if(A != null) {
//            if(y == null) {
//                ViewStub vs = (ViewStub)findViewById(xa.f.chat_float_dialog_stub);
//                vs.setVisibility(0x0);
//                y = findViewById(xa.f.chat_float_dialog);
//            }
//            TextView title = (TextView)findViewById(xa.f.chat_float_dialog_title);
//            TextView description = (TextView)findViewById(xa.f.chat_float_dialog_descrption);
//            ImageView icon = (ImageView)findViewById(xa.f.chat_float_dialog_icon);
//            View send = findViewById(xa.f.chat_float_dialog_send);
//            View close = findViewById(xa.f.chat_float_dialog_close);
//            title.setText(A.a);
//            description.setText(A.b);
//            icon.setImageResource(A.c);
//            if(A.d != null) {
//                send.setVisibility(0x0);
//                send.setOnClickListener(new View.OnClickListener(this) {
//
//                    22(ChatMsgActivity p1) {
//                    }
//
//                    public void onClick(View v) {
//                        if((F(a) != null) && (F(a).d != null) && (G(a) != null) && (G(a).getVisibility() != 0x8)) {
//                            if(F(a).d instanceof MailDo) {
//                                (Statistics)Doraemon.getArtifact("STATISTICS").recordStatistics(0x201, "mail_trans_to_chat_click", new String[0x0]);
//                                a.d.a(F(a).d);
//                            }
//                            a.h();
//                        }
//                        H(a);
//                    }
//                });
//            } else {
//                send.setVisibility(0x8);
//            }
//            close.setOnClickListener(new View.OnClickListener(this) {
//
//                24(ChatMsgActivity p1) {
//                }
//
//                public void onClick(View v) {
//                    H(a);
//                }
//            });
//            return;
//        }
//        if(y != null) {
//            y.setVisibility(0x8);
//        }
//    }
//
//    private void K() {
//        if((y != null) && (y.getVisibility() != 0x8)) {
//            y.setVisibility(0x8);
//            AlphaAnimation aa = new AlphaAnimation(1.0f, 0.0f);
//            aa.setDuration(0xc8);
//            y.startAnimation(aa);
//        }
//    }
//
//    private void L() {
//        if((y != null) && (y.getVisibility() == 0)) {
//            y.setVisibility(0x4);
//            TranslateAnimation ta = new TranslateAnimation(0.0f, 0.0f, 0.0f, (float)-y.getHeight());
//            ta.setDuration(0xc8);
//            y.startAnimation(ta);
//        }
//    }
//
//    private void M() {
//        if((y != null) && (y.getVisibility() == 0x4)) {
//            y.setVisibility(0x0);
//            TranslateAnimation ta = new TranslateAnimation(0.0f, 0.0f, (float)-y.getHeight(), 0.0f);
//            ta.setDuration(0xc8);
//            y.startAnimation(ta);
//        }
//    }
//
//    private void N() {
//        u.setOnListViewArrivedListener(new ChatMsgListView.b(this) {
//
//            25(ChatMsgActivity p1) {
//            }
//
//            public void a() {
//                a.a(a.b());
//            }
//
//            public void b() {
//                a.b(a.b());
//            }
//        });
//        u.setGestureDetector((this, new GestureDetector.OnGestureListener(this) {
//
//            26(ChatMsgActivity p1) {
//            }
//
//            public boolean onDown(MotionEvent e) {
//                return false;
//            }
//
//            public void onShowPress(MotionEvent e) {
//            }
//
//            public boolean onSingleTapUp(MotionEvent e) {
//                a.a(false);
//                I(a);
//                return false;
//            }
//
//            public boolean onScroll(MotionEvent e1, MotionEvent e2, float distanceX, float distanceY) {
//                a.a(false);
//                I(a);
//                return false;
//            }
//
//            public void onLongPress(MotionEvent e) {
//            }
//
//            public boolean onFling(MotionEvent e1, MotionEvent e2, float velocityX, float velocityY) {
//                return false;
//            }
//        }));
//        u.setOnScrollListener(new AbsListView.OnScrollListener(this) {
//
//            27(ChatMsgActivity p1) {
//            }
//
//            public void onScrollStateChanged(AbsListView view, int scrollState) {
//            }
//
//            public void onScroll(AbsListView view, int firstVisibleItem, int visibleItemCount, int totalItemCount) {
//                if((g(a) != null) && (g(a).c() != null) && (g(a).c().size() > 0) && (o(a) != null) && (o(a).getListView() != null)) {
//                    int lastPos = o(a).getListView().getLastVisiblePosition();
//                    int limit = (g(a).c().size() + o(a).getListView().getHeaderViewsCount()) + o(a).getListView().getFooterViewsCount();
//                    if((lastPos == (limit - 0x1)) && (g(a).a()) && ((View lastItem = o(a).getListView().getChildAt((o(a).getListView().getChildCount() - 0x1))) != null) && (lastItem.getBottom() <= o(a).getHeight())) {
//                        o(a).setBottomMode(true);
//                    } else {
//                        o(a).setBottomMode(false);
//                    }
//                }
//                if(s(a) != null) {
//                    ChatMsgActivity.b.a(s(a), view, firstVisibleItem, visibleItemCount, totalItemCount);
//                }
//            }
//        });
//        u.getListView().setOnItemLongClickListener(new AdapterView.OnItemLongClickListener(this) {
//
//            28(ChatMsgActivity p1) {
//            }
//
//            public boolean onItemLongClick(AdapterView<?> adapterView, View view, int position, long id) {
//                if(b(a) == null) {
//                    return false;
//                }
//                int index = position - o(a).getListView().getHeaderViewsCount();
//                if((index >= 0) && (index < h(a).getCount())) {
//                    Message messageObject = h(a).b(index);
//                    boolean isToMessage = 0x0;
//                    if(messageObject != null) {
//                        isToMessage = J(a) != messageObject.senderId() ? 0x1 : 0x0;
//                        boolean isSysMsg = messageObject.creatorType() == Message.CreatorType.SYSTEM ? 0x1 : 0x0;
//                        (!isSysMsg)) {
//                            K(a).a(0x0, b(a), isToMessage, messageObject);
//                        }
//                    }
//                }
//                return true;
//                return true;
//            }
//        });
//    }
//
//    private void a(int height) {
//        if(q != height) {
//            q = height;
//            LinearLayout.LayoutParams params = new LinearLayout.LayoutParams(-0x1, q);
//            p.setLayoutParams(params);
//            vl.a(this, "pref_keyboard_height", q);
//            vm.d("changeKeyboardHeight", "" + q);
//        }
//    }
//
//    private void O() {
//        m = (RelativeLayout)findViewById(xa.f.layout_chat_mainborad);
//        m.getViewTreeObserver().removeGlobalOnLayoutListener(al);
//        m.getViewTreeObserver().addOnGlobalLayoutListener(al);
//        p = (ViewGroup)findViewById(xa.f.input_footer_container);
//        a(vl.a(this, "pref_keyboard_height", Integer.valueOf(0x0)));
//        n = (EmotionFooterView)findViewById(xa.f.emotion_footer_view);
//        o = (GridView)findViewById(xa.f.chat_add_apps);
//        am = new ChatAddAppModel(this);
//        b = (InputPanelView)findViewById(xa.f.input_view);
//        b.setVisibility(n());
//        b.setTextChangeListener(new InputPanelView.a(this) {
//
//            30(ChatMsgActivity p1) {
//            }
//
//            public void a(CharSequence s, int start, int before, int count) {
//                String text = s.toString();
//                if((before == 0) && (text.substring(start, (start + count)).endsWith("@")) && (b(a) != null) && (b(a).type() != 0x1) && (!Q(a))) {
//                    Navigator.from(R(a)).to("https://qr.dingtalk.com/group_chat_member.html", new IntentRewriter(this) {
//
//                        1(ChatMsgActivity.30 p1) {
//                        }
//
//                        public Intent onIntentRewrite(Intent intent) {
//                            intent.putExtra("conversation_id", b(a.a).conversationId());
//                            intent.putExtra("count_limit", 0x7fffffff);
//                            intent.putExtra("filter_myself", true);
//                            intent.putExtra("activity_identify", "ACTIVITY_IDENTIFY_AT");
//                            ArrayList<UserIdentityObject> uncheckList = new ArrayList<UserIdentityObject>();
//                            uncheckList.add(UserIdentityObject.getUserIdentityObject(rb.a().b()));
//                            intent.putParcelableArrayListExtra("unchecked_users", (ArrayList)uncheckList);
//                            return intent;
//                        }
//                    });
//                } else if(Doraemon.getRunningMode() == Doraemon.MODE_DEBUG) {
//                    if("*#000*#".equals(text)) {
//                        S(a);
//                        a.b.getSendMessageEditText().clearComposingText();
//                    } else if("*#000#*".equals(text)) {
//                        T(a);
//                        a.b.getSendMessageEditText().clearComposingText();
//                    } else if("*#007*#".equals(text)) {
//                        U(a);
//                        a.b.getSendMessageEditText().clearComposingText();
//                    } else if("*#007#*".equals(text)) {
//                        V(a);
//                        a.b.getSendMessageEditText().clearComposingText();
//                    }
//                }
//                if(text.length() > 0) {
//                    long currentTime = System.currentTimeMillis();
//                    if((currentTime - W(a)) >= 0x1388) {
//                        if((b(a) != null) && (b(a).type() == 0x1) && (X(a)) && (Y(a) [cmp] 0x0 == 0) || ((System.currentTimeMillis() - Y(a)) <= 0xea60)) {
//                            b(a).sendTypingEvent(Conversation.TypingCommand.TYPING, Conversation.TypingType.TEXT);
//                            a(a, Conversation.TypingCommand.TYPING);
//                            c(a, currentTime);
//                        }
//                    }
//                }
//                if((Z(a) != null) && (!Q(a))) {
//                    Z(a).a(s, start, before, count);
//                }
//                c(a, false);
//            }
//
//            public void b(CharSequence s, int start, int count, int after) {
//                if(after == 0) {
//                    String stringDeleting = s.toString().substring(start, (start + count));
//                    Matcher matcher = v().matcher(stringDeleting);
//                    if(matcher.matches()) {
//                        long uid = Long.parseLong(matcher.group(0x1));
//                        if(k(a).containsKey(Long.valueOf(uid))) {
//                            k(a).remove(Long.valueOf(uid));
//                        }
//                    }
//                }
//            }
//        });
//        b.getFaceButton().setOnClickListener(new View.OnClickListener(this) {
//
//            31(ChatMsgActivity p1) {
//            }
//
//            public void onClick(View v) {
//                if(M(a) == 0x2) {
//                    l(a);
//                    return;
//                }
//                aa(a);
//                I(a);
//            }
//        });
//        n.setEmotionClickListener(new EmotionFooterView.b(this) {
//
//            32(ChatMsgActivity p1) {
//            }
//
//            public void a(wf.a emotionIdentifier) {
//                if(emotionIdentifier.b() == xa.e.emotion_delete) {
//                    KeyEvent event = new KeyEvent(0x0, 0x0, 0x0, 0x43, 0x0, 0x0, 0x0, 0x0, 0x6);
//                    a.b.getSendMessageEditText().dispatchKeyEvent(event);
//                    return;
//                }
//                if(emotionIdentifier.b() == 0) {
//                    ab(a).start(new Runnable(this, emotionIdentifier) {
//
//                        1(ChatMsgActivity.32 p1, wf.a p2) {
//                        }
//
//                        public void run() {
//                            b.a.d.a(a);
//                        }
//                    });
//                    return;
//                }
//                SpannableString spannableString = vd.a().a(R(a), emotionIdentifier.a());
//                int cursorIndex = a.b.getSendMessageEditText().getSelectionStart();
//                if(spannableString != null) {
//                    Editable ea = a.b.getSendMessageEditText().getText();
//                    ea.insert(cursorIndex, spannableString);
//                }
//            }
//        });
//        o.setAdapter(new BaseAdapter(this) {
//
//            33(ChatMsgActivity p1) {
//            }
//
//            public int getCount() {
//                if((ac(a) != null) && (ac(a).b() != null)) {
//                    return ac(a).b().size();
//                }
//                return 0x0;
//            }
//
//            public Object getItem(int position) {
//                return null;
//            }
//
//            public long getItemId(int position) {
//                return 0x0;
//            }
//
//            public View getView(int position, View convertView, ViewGroup parent) {
//                if((ac(a) != null) && (ac(a).b() != null)) {
//                    if((position >= 0) && (position < ac(a).b().size())) {
//                        return (View)ac(a).b().get(position);
//                    }
//                }
//                return null;
//            }
//        });
//        o.setOnItemClickListener(new AdapterView.OnItemClickListener(this) {
//
//            35(ChatMsgActivity p1) {
//            }
//
//            public void onItemClick(AdapterView<?> p1, View view, int position, long id) {
//                // :( Parsing error. Please contact me.
//            }
//        });
//        k = (TextView)findViewById(xa.f.voice_tips);
//        k.setVisibility(0x8);
//        b.getVoiceButton().setOnClickListener(new View.OnClickListener(this) {
//
//            36(ChatMsgActivity p1) {
//            }
//
//            public void onClick(View v) {
//                (Statistics)Doraemon.getArtifact("STATISTICS").recordStatistics(0x201, "chat_voice_button_click", new String[0x0]);
//                Animation shake = AnimationUtils.loadAnimation(R(a), xa.a.shake);
//                a.b.startAnimation(shake);
//                ad(a).setVisibility(0x0);
//                a.b.getVoiceButton().setEnabled(false);
//                a.b.postDelayed(new Runnable(this) {
//
//                    1(ChatMsgActivity.36 p1) {
//                    }
//
//                    public void run() {
//                        ad(a.a).setVisibility(0x8);
//                        a.a.b.getVoiceButton().setEnabled(true);
//                    }
//                }, 0x3e8);
//            }
//        });
//        P();
//        b.setSendButtonOnClicker(new View.OnClickListener(this) {
//
//            37(ChatMsgActivity p1) {
//            }
//
//            public void onClick(View v) {
//                ae(a);
//                I(a);
//            }
//        });
//        b.getSendMessageEditText().setOnTouchListener(new View.OnTouchListener(this) {
//
//            38(ChatMsgActivity p1) {
//            }
//
//            public boolean onTouch(View v, MotionEvent event) {
//                l(a);
//                return false;
//            }
//        });
//        l = (VoiceRecordView)findViewById(xa.f.voice_record_view);
//        if(an == null) {
//            an = new aar(this, findViewById(xa.f.input_smart_tip_stub));
//        }
//    }
//
//    protected int n() {
//        return 0x0;
//    }
//
//    public void o() {
//        P();
//        if((o != null) && (o.getAdapter() != null)) {
//            if(o.getAdapter() instanceof BaseAdapter) {
//                am.a();
//                (BaseAdapter)o.getAdapter().notifyDataSetChanged();
//            }
//        }
//    }
//
//    private void P() {
//        if(Q != null) {
//            if(Q.tag() == 0x4) {
//                b.getAddAppButton().setImageResource(xa.e.btn_camera_default);
//                b.setAddAppButtonOnClicker(new View.OnClickListener(this) {
//
//                    39(ChatMsgActivity p1) {
//                    }
//
//                    public void onClick(View v) {
//                        a.g();
//                    }
//                });
//                return;
//            }
//            Map<String, String> localExtras = Q.localExtras();
//            boolean isShowTowerRed = (localExtras != null) && (!TextUtils.isEmpty((CharSequence)localExtras.get("button_app_ids")));
//            if(isShowTowerRed) {
//                b.getAddAppButton().setImageResource(xa.e.chat_btn_add_new);
//            } else {
//                b.getAddAppButton().setImageResource(xa.e.chat_btn_add);
//            }
//            b.setAddAppButtonOnClicker(new View.OnClickListener(this) {
//
//                40(ChatMsgActivity p1) {
//                }
//
//                public void onClick(View v) {
//                    if(M(a) == 0x3) {
//                        l(a);
//                        return;
//                    }
//                    af(a);
//                    I(a);
//                }
//            });
//        }
//    }
//
//    private void Q() {
//        AutoTrigger.a().a(AutoTrigger.TriggerType.MessageSending, 0x3e8, 0x0, d);
//        AutoTrigger.a().a(AutoTrigger.TriggerType.LogoutAutomatically, 0xea60, 0xea60, 0x0);
//    }
//
//    private void R() {
//        AutoTrigger.a().a(AutoTrigger.TriggerType.MessageSending);
//        AutoTrigger.a().a(AutoTrigger.TriggerType.LogoutAutomatically);
//    }
//
//    private void S() {
//        AutoTrigger.a().a(AutoTrigger.TriggerType.SendEmotionMessage, 0x3e8, 0x0, d);
//    }
//
//    private void T() {
//        AutoTrigger.a().a(AutoTrigger.TriggerType.SendEmotionMessage);
//    }
//
//    public int p() {
//        return r;
//    }
//
//    public void a(boolean autoTrigger) {
//        if(r != 0) {
//            int old = r;
//            r = 0x0;
//            b.c();
//            b.setFacesPannelVisiable(false);
//            b.setMessageEditCursorVisible(false);
//            if(old == 0x1) {
//                if(!autoTrigger) {
//                    un.b(this, b.getSendMessageEditText());
//                }
//                return;
//            }
//            p.setVisibility(0x8);
//            getWindow().setSoftInputMode(0x12);
//            M();
//        }
//    }
//
//    private void U() {
//        if(r != 0x1) {
//            r = 0x1;
//            b.setFacesPannelVisiable(false);
//            b.setMessageEditCursorVisible(true);
//            b.c();
//            h();
//            un.a(this, b.getSendMessageEditText());
//        }
//    }
//
//    private void V() {
//        if(r != 0x2) {
//            int old = r;
//            r = 0x2;
//            b.setFacesPannelVisiable(true);
//            b.c();
//            if("ww".equals(n.b)) {
//                b.setMessageEditCursorVisible(true);
//            } else {
//                b.setMessageEditCursorVisible(false);
//            }
//            h();
//            p.setVisibility(0x0);
//            n.setVisibility(0x0);
//            o.setVisibility(0x8);
//            getWindow().setSoftInputMode(0x22);
//            if(old == 0x1) {
//                un.b(this, b.getSendMessageEditText());
//            }
//            if(old == 0) {
//                L();
//            }
//        }
//    }
//
//    private void W() {
//        if(r != 0x3) {
//            int old = r;
//            r = 0x3;
//            b.setFacesPannelVisiable(false);
//            b.c();
//            b.setMessageEditCursorVisible(false);
//            h();
//            p.setVisibility(0x0);
//            o.setVisibility(0x0);
//            n.setVisibility(0x8);
//            getWindow().setSoftInputMode(0x22);
//            if(old == 0x1) {
//                un.b(this, b.getSendMessageEditText());
//            }
//            if(old == 0) {
//                L();
//            }
//        }
//    }
//
//    public boolean onKeyDown(int keyCode, KeyEvent event) {
//        Log.i("keyCode", "keyCode= " + keyCode);
//        if(keyCode == 0x4) {
//            if(l.isShown()) {
//                l.a();
//                return true;
//            }
//            if(r != 0) {
//                a(false);
//                X();
//                return true;
//            }
//            t();
//        }
//        return super.onKeyDown(keyCode, event);
//    }
//
//    private void X() {
//        if(an != null) {
//            an.a();
//        }
//    }
//
//    protected boolean q() {
//        return true;
//    }
//
//    private void Y() {
//        if((d == null) || (d.a() == null)) {
//            un.a(xa.h.chat_initing);
//            return;
//        }
//        Y = 0x0;
//        String contString = b.getMessageEditContent();
//        if((contString.trim().length() > 0) && (contString.length() <= 0x1388)) {
//            if((q()) && (abl.a().a(contString, Q, P))) {
//                if(S != null) {
//                    S.a();
//                    S = 0x0;
//                }
//                S = abl.a().a(this, M, Q, P, new zn.a(this) {
//
//                    41(ChatMsgActivity p1) {
//                    }
//
//                    public void a() {
//                        a.b.setMessageEditContent("");
//                    }
//
//                    public void a(String code, String reason) {
//                        un.a(xa.h.create_burn_con_error);
//                    }
//                });
//                b.setMessageEditContent("");
//                return;
//            }
//            b.getSendButton().setEnabled(false);
//            if((Q != null) && (!TextUtils.isEmpty(Q.draftMessage()))) {
//                HashMap<String, String> extra = (HashMap)Q.localExtras();
//                if(extra == null) {
//                    HashMap extra = new HashMap();
//                }
//                extra.remove("at_uids");
//                Q.updateLocalExtras(extra);
//                Q.updateDraftMessage("");
//            }
//            HashMap<Long, String> atUidMap = new HashMap<Long, String>();
//            Iterator iter = U.entrySet().iterator();
//            while(iter.hasNext()) {
//                Map.Entry entry = (Map.Entry)iter.next();
//                Long key = (Long)entry.getKey();
//                String val = (String)entry.getValue();
//                atUidMap.put(key, val);
//            }
//            b.setMessageEditContent("");
//            Thread queueThread = ac();
//            queueThread.setPriority(Priority.IMMEDIATE);
//            queueThread.start(new Runnable(this, contString, atUidMap) {
//
//                42(ChatMsgActivity p1, String p2, HashMap p3) {
//                }
//
//                public void run() {
//                    if(k(c) != null) {
//                        k(c).clear();
//                    }
//                    if(E(c)) {
//                        c.d.b(a, b);
//                        return;
//                    }
//                    c.d.a(a, b);
//                    Statistics statistics = (Statistics)Doraemon.getArtifact("STATISTICS");
//                    statistics.startOffLineDurationStatistics("sendText");
//                    statistics.startDurationStatistics("DD", "sendText", "totalTime");
//                    vm.f("sendText", "sending(\u53d1\u9001\u6587\u5b57-\u6587\u5b57\u6210\u529f) start :" + System.currentTimeMillis());
//                }
//            });
//            h();
//            return;
//        }
//        if(contString.length() > 0x1388) {
//            un.a(xa.h.text_too_long);
//        }
//    }
//
//    public void r() {
//        if(b != null) {
//            b.setMessageEditContent("");
//        }
//    }
//
//    protected void onNewIntent(Intent intent) {
//        super.onNewIntent(intent);
//        if(intent != null) {
//            setIntent(intent);
//        }
//        F();
//        a(intent);
//        if(isAttachedToWindow()) {
//            ActivityAction action = (ActivityAction)getIntent().getSerializableExtra("attach_window_action");
//            if(action != null) {
//                action.doAction(this);
//            }
//        }
//    }
//
//    protected void onStop() {
//        super.onStop();
//        if((Q != null) && (Q.type() == 0x1) && (X) && (Conversation.TypingCommand.CANCEL != af)) {
//            Q.sendTypingEvent(Conversation.TypingCommand.CANCEL, Conversation.TypingType.TEXT);
//            af = Conversation.TypingCommand.CANCEL;
//        }
//    }
//
//    private void c(Conversation conversation) {
//        if(conversation == null) {
//            return;
//        }
//        if(conversation.tag() == 0x2) {
//            b(true);
//        } else {
//            b(false);
//        }
//        if(conversation.tag() == 0x4) {
//            mActionBar.setDisplayShowCustomEnabled(true);
//            ImageView titleIcon = (ImageView)s.findViewById(xa.f.enterprise_icon);
//            titleIcon.setImageResource(xa.e.chat_safe_model_title);
//        }
//    }
//
//    private void b(int res) {
//        wl.a builder = new wl.a(this);
//        builder.setTitle(xa.h.tip).setMessage(res).setCancelable(false).setPositiveButton(xa.h.sure, new DialogInterface.OnClickListener(this) {
//
//            43(ChatMsgActivity p1) {
//            }
//
//            public void onClick(DialogInterface dialog, int which) {
//                if(b(a) != null) {
//                    b(a).remove();
//                }
//                a.finish();
//            }
//        });
//        builder.show().setCanceledOnTouchOutside(false);
//    }
//
//    private void Z() {
//        if(Q != null) {
//            if(Q.type() == 0x2) {
//                a(Q.title());
//            } else {
//                long uid = aan.a(Q.conversationId());
//                ContactInterface.a().a(uid, new uf(this) {
//
//                    44(ChatMsgActivity p1) {
//                    }
//
//                    public void a(UserProfileObject data) {
//                        if(b(a) != null) {
//                            a(a, data);
//                            a.a(a.e.a(data));
//                            Intent intent = new Intent("com.workapp.CONVERSATION_NOTICE_CHANGED");
//                            intent.putExtra("cid", b(a).conversationId());
//                            intent.putExtra("is_single_chat", true);
//                            LocalBroadcastManager.getInstance(tf.a().b()).sendBroadcast(intent);
//                        }
//                    }
//
//                    public void onException(String code, String reason) {
//                    }
//                });
//            }
//            invalidateOptionsMenu();
//            ab();
//            s();
//            aa();
//            c(Q);
//        }
//    }
//
//    private void aa() {
//        if(z == null) {
//            ArrayList<RedPacketsMessageBodyDo> list = new ArrayList<RedPacketsMessageBodyDo>();
//            un.b(ChatMsgActivity.class.getName()).start(new Runnable(this, list) {
//
//                46(ChatMsgActivity p1, ArrayList p2) {
//                }
//
//                public void run() {
//                    HashMap<String, String> map = (HashMap)b(b).localExtras();
//                    if((map != null) && (!TextUtils.isEmpty((CharSequence)map.get("enterprise_redpackests_list")))) {
//                        String[] listString = (String)map.get("enterprise_redpackests_list").split("_repackets===repackets_");
//                        for(String elment : listString) {
//                            a.add(tt.a(vj.a(elment), RedPacketsMessageBodyDo.class));
//                        }
//                        azf.a().post(new Runnable(this) {
//
//                            1(ChatMsgActivity.46 p1) {
//                            }
//
//                            public void run() {
//                                a(a.b, (IMBanner)a.b.findViewById(xa.f.chat_banner));
//                                if(a.a.size() > 0) {
//                                    ag(a.b).setVisibility(0x0);
//                                    ag(a.b).setCurrentConversation(b(a.b));
//                                    ag(a.b).a(RewardBannerView.class, a.a);
//                                    b(a.b).updateLocalExtras("enterprise_redpackests_list", "");
//                                    return;
//                                }
//                                ag(a.b).setVisibility(0x8);
//                            }
//                        });
//                    }
//                }
//            });
//        }
//    }
//
//    protected void s() {
//    }
//
//    protected void a(String text) {
//        if((Q != null) && (Q.tag() == 0x4)) {
//            mActionBar.setDisplayShowCustomEnabled(true);
//            mActionBar.setTitle(" ");
//            return;
//        }
//        if(text != null) {
//            mActionBar.setTitle(text);
//        }
//        ap = text;
//    }
//
//    private void ab() {
//        if(Q != null) {
//            if((!TextUtils.isEmpty(Q.draftMessage())) && (TextUtils.isEmpty(b.getMessageEditContent()))) {
//                W = true;
//                SpannableString spannableString = vd.a().a(this, Q.draftMessage());
//                HashMap<String, String> extra = (HashMap)Q.localExtras();
//                if(extra == null) {
//                    HashMap extra = new HashMap();
//                }
//                String des = (String)extra.get("at_uids");
//                if(!TextUtils.isEmpty(des)) {
//                    HashMap<Long, String> map = vn.d(des);
//                    if((map != null) && (map.size() > 0)) {
//                        Iterator iter = map.entrySet().iterator();
//                        while(iter.hasNext()) {
//                            Map.Entry entry = (Map.Entry)iter.next();
//                            Long key = (Long)entry.getKey();
//                            String val = (String)entry.getValue();
//                            U.put(key, val);
//                        }
//                        b.getSendMessageEditText().setAtUidMap(U);
//                    }
//                }
//                b.a(spannableString);
//                b.c();
//                return;
//            }
//            b.setMessageEditCursorVisible(false);
//        }
//    }
//
//    public void t() {
//        String draft = b.getMessageEditContent();
//        if(draft.trim().length() <= 0) {
//            String draft = "";
//        }
//        if((Q != null) && (!draft.equals(Q.draftMessage()))) {
//            if((U != null) && (U.size() > 0)) {
//                HashMap<Long, String> atUidMap = new HashMap<Long, String>();
//                Iterator iter = U.entrySet().iterator();
//                while(iter.hasNext()) {
//                    Map.Entry entry = (Map.Entry)iter.next();
//                    Long key = (Long)entry.getKey();
//                    String val = (String)entry.getValue();
//                    atUidMap.put(key, val);
//                }
//                HashMap<String, String> extra = (HashMap)Q.localExtras();
//                if(extra == null) {
//                    HashMap extra = new HashMap();
//                }
//                extra.put("at_uids", vn.a(atUidMap));
//                Q.updateLocalExtras(extra);
//            }
//            Q.updateDraftMessage(draft);
//        }
//    }
//
//    protected void onDestroy() {
//        if(R != null) {
//            R.b();
//            R = 0x0;
//        }
//        if(t != null) {
//            t.a(0x0);
//            t = 0x0;
//        }
//        if(b != null) {
//            b.setTextChangeListener(0x0);
//        }
//        if((ae != null) && (ac != null)) {
//            ae.removeCallbacks(ac);
//        }
//        ae = 0x0;
//        ac = 0x0;
//        j = 0x0;
//        if(d != null) {
//            d.a(0x0);
//            d = 0x0;
//        }
//        wy.a().a(Object.class);
//        wy.a().g();
//        m.getViewTreeObserver().removeGlobalOnLayoutListener(al);
//        if(aj != null) {
//            (MessageService)IMEngine.getIMService(MessageService.class).removeMessageListener(aj);
//        }
//        aaj.e().b(P);
//        (ConversationService)IMEngine.getIMService(ConversationService.class).removeConversationChangeListener(ah);
//        if(J != null) {
//            J.e();
//        }
//        if((l != null) && (l.isShown())) {
//            l.a();
//        }
//        if((ai != null) && (i != null)) {
//            i.unregisterReceiver(ai);
//        }
//        if(O != null) {
//            ContactInterface.a().d(O);
//            O = 0x0;
//        }
//        if(U != null) {
//            U.clear();
//        }
//        if(x != null) {
//            x.d();
//            x = 0x0;
//        }
//        ag.b();
//        ag = 0x0;
//        if(S != null) {
//            S.a();
//            S = 0x0;
//        }
//        if(an != null) {
//            an.b();
//            an = 0x0;
//        }
//        if(T != null) {
//            T.a();
//            T = 0x0;
//        }
//        if(ao != null) {
//            ao.cancel();
//            ao = 0x0;
//        }
//        y();
//        super.onDestroy();
//    }
//
//    protected void a(long senderId) {
//        if(x != null) {
//            x.b(new abm.c(this) {
//                private ChatMsgListView.a b;
//
//                47(ChatMsgActivity p1) {
//                }
//
//                public void a(int mode, Object obj) {
//                    vm.f("historyListPull", "loading(\u804a\u5929-\u5386\u53f2\u62c9\u53d6\u65f6\u95f4) start :" + System.currentTimeMillis());
//                }
//
//                public void a(int mode, Object obj, boolean should) {
//                    vm.f("historyListPull", "end :" + System.currentTimeMillis());
//                }
//
//                public void a(int mode, String code, String reason, Object obj) {
//                    un.a(code, reason);
//                }
//
//                public void b(int mode, Object obj) {
//                    if(o(a) != null) {
//                        b = o(a).getCurrentAnchor();
//                    }
//                }
//
//                public void a(int mode, int anchorPosition, Object obj) {
//                    if(o(a) != null) {
//                        o(a).a(b);
//                    }
//                }
//
//                public void c(int mode, Object obj) {
//                }
//            }, senderId, false, "load_pre");
//        }
//    }
//
//    protected void b(long senderId) {
//        if(x != null) {
//            x.c(new abm.c(this) {
//                private ChatMsgListView.a b;
//
//                48(ChatMsgActivity p1) {
//                }
//
//                public void a(int mode, Object obj) {
//                }
//
//                public void a(int mode, Object obj, boolean should) {
//                }
//
//                public void a(int mode, String code, String reason, Object obj) {
//                    un.a(code, reason);
//                }
//
//                public void b(int mode, Object obj) {
//                    if(o(a) != null) {
//                        b = o(a).getCurrentAnchor();
//                    }
//                }
//
//                public void a(int mode, int anchorPosition, Object obj) {
//                    if(o(a) != null) {
//                        o(a).a(b);
//                    }
//                }
//
//                public void c(int mode, Object obj) {
//                }
//            }, senderId, false, "load_next");
//        }
//    }
//
//    protected void a(Message message) {
//        if(x != null) {
//            int result = x.a(message, new abm.c(this) {
//                private ChatMsgListView.a b;
//
//                49(ChatMsgActivity p1) {
//                }
//
//                public void a(int mode, Object obj) {
//                }
//
//                public void a(int mode, Object obj, boolean should) {
//                }
//
//                public void a(int mode, String code, String reason, Object obj) {
//                    un.a(code, reason);
//                }
//
//                public void b(int mode, Object obj) {
//                    if((mode == 0x2) || (mode == 0x1)) {
//                        if(o(a) != null) {
//                            b = o(a).getCurrentAnchor();
//                        }
//                    }
//                }
//
//                public void a(int mode, int anchorPosition, Object obj) {
//                    if(mode == 0x2) {
//                        if(o(a) != null) {
//                            o(a).a(b);
//                            o(a).a(anchorPosition, 0x0, true, true);
//                        }
//                        return;
//                    }
//                    if(mode == 0x1) {
//                        if(o(a) != null) {
//                            o(a).a(b);
//                            o(a).a(anchorPosition, 0x0, true, true);
//                        }
//                        return;
//                    }
//                    if(mode == 0) {
//                        if(o(a) != null) {
//                            o(a).a(anchorPosition, 0x0, false, true);
//                        }
//                    }
//                }
//
//                public void c(int mode, Object obj) {
//                }
//            }, true, "jump");
//            if(result >= 0) {
//                if(u != null) {
//                    u.a(result, 0x0, true, true);
//                }
//            }
//        }
//    }
//
//    public boolean dispatchTouchEvent(MotionEvent ev) {
//        boolean result = 0x0;
//        try {
//            J.a(ev);
//            return result;
//        } catch(Throwable tr) {
//            tr.printStackTrace();
//        }
//        return result;
//    }
//
//    private boolean d(Conversation conversation) {
//        if(conversation == null) {
//            return false;
//        }
//        String cid = conversation.conversationId();
//        if(conversation.type() == 0x1) {
//            String[] uids = cid.split(":");
//            if((uids != null) && (uids.length == 0x2)) {
//                if((!TextUtils.isEmpty(uids[0x0])) && (uids[0x0].equals(uids[0x1]))) {
//                    return true;
//                }
//            }
//        }
//        return false;
//    }
//
//    private Thread ac() {
//        Thread queueThread = (Thread)Doraemon.getArtifact("THREAD");
//        queueThread.addThread2Group(ChatMsgActivity.class.getSimpleName());
//        queueThread.setGroupConcurrents(0x1);
//        queueThread.setPriority(Priority.IMMEDIATE);
//        return queueThread;
//    }
//
//    private SpannableStringBuilder c(int res) {
//        Drawable d = getResources().getDrawable(xa.e.red_dot_icon);
//        d.setBounds(0x0, 0x0, d.getIntrinsicWidth(), d.getIntrinsicHeight());
//        we is = new we(d, 0x3, getResources().getDimensionPixelSize(xa.d.action_bar_dot_text_padding));
//        String st = getString(res) + "*";
//        SpannableStringBuilder sb = new SpannableStringBuilder(st);
//        sb.setSpan(is, (st.length() - 0x1), st.length(), 0x21);
//        return sb;
//    }
//
//    public boolean onCreateOptionsMenu(Menu menu) {
//        SubMenu subMenu = menu.addSubMenu(0x0, 0x2, 0x1, xa.h.more);
//        subMenu.add(0x0, 0x5, 0x1, xa.h.chat_action_bar_title_pic);
//        subMenu.add(0x0, 0x4, 0x1, xa.h.chat_action_bar_title_file);
//        MenuItem settingMenu = subMenu.add(0x0, 0x3, 0x1, xa.h.chat_action_bar_title_setting);
//        subMenu.getItem().setIcon(xa.e.ic_actbar_setting).setShowAsAction(0x2);
//        MenuItem goUrlMenu = menu.add(0x0, 0x9, 0x1, "");
//        goUrlMenu.setIcon(xa.e.ic_chat_menu_go_url);
//        goUrlMenu.setShowAsAction(0x2);
//        if(Q != null) {
//            if(Q.tag() == 0x8) {
//                subMenu.getItem().setVisible(false);
//                if(TextUtils.isEmpty(Q.extension("url"))) {
//                    goUrlMenu.setVisible(false);
//                } else {
//                    goUrlMenu.setVisible(true);
//                } else {
//                    goUrlMenu.setVisible(false);
//                    if(Q.type() != 0x1) {
//                        MenuItem menuTel = menu.add(0x0, 0x1, 0x0, xa.h.act_title_conference);
//                        menuTel.setIcon(xa.e.ic_actbar_conv_tel);
//                        menuTel.setShowAsAction(0x2);
//                        Map<String, String> extra = Q.localExtras();
//                        if((extra != null) && (extra.containsKey("announceUnread"))) {
//                            subMenu.add(0x0, 0x8, 0x0, c(xa.h.announce_group));
//                            subMenu.setIcon(xa.e.ic_actbar_conv_setting_red);
//                        } else {
//                            subMenu.add(0x0, 0x8, 0x0, xa.h.announce_group);
//                            subMenu.setIcon(xa.e.ic_actbar_conv_setting);
//                        }
//                        if((extra != null) && (extra.containsKey("setting_app_new"))) {
//                            settingMenu.setTitle(c(xa.h.chat_action_bar_title_setting));
//                            subMenu.setIcon(xa.e.ic_actbar_conv_setting_red);
//                        }
//                    } else if(Q.tag() == 0x4) {
//                        MenuItem menuBurnInfo = menu.add(0x0, 0x6, 0x0, xa.h.experience);
//                        menuBurnInfo.setIcon(xa.e.ic_actbar_guide);
//                        menuBurnInfo.setShowAsAction(0x2);
//                        subMenu.getItem().setVisible(false);
//                    } else if(Q.tag() == 0x5) {
//                        MenuItem menuBurnEnter = menu.add(0x0, 0x7, 0x0, xa.h.chat_action_bar_title_burn_chat);
//                        if((R != null) && (R.a())) {
//                            menuBurnEnter.setIcon(xa.e.ic_chat_safe_lock_icon_point);
//                        } else {
//                            menuBurnEnter.setIcon(xa.e.ic_chat_safe_lock_icon);
//                        }
//                        menuBurnEnter.setShowAsAction(0x2);
//                        subMenu.getItem().setVisible(false);
//                    } else if(!d(Q)) {
//                        menuBurnEnter = menu.add(0x0, 0x7, 0x0, xa.h.chat_action_bar_title_burn_chat);
//                        if((R != null) && (R.a())) {
//                            menuBurnEnter.setIcon(xa.e.ic_chat_safe_lock_icon_point);
//                        } else {
//                            menuBurnEnter.setIcon(xa.e.ic_chat_safe_lock_icon);
//                        }
//                        menuBurnEnter.setShowAsAction(0x2);
//                        menuTel = menu.add(0x0, 0x1, 0x0, xa.h.act_title_conference);
//                        menuTel.setIcon(xa.e.ic_actbar_conv_tel);
//                        menuTel.setShowAsAction(0x2);
//                    } else {
//                        subMenu.setIcon(xa.e.ic_act_o2o_conv_setting);
//                    } else {
//                        subMenu.getItem().setVisible(false);
//                    }
//                }
//            }
//        }
//        return super.onCreateOptionsMenu(menu);
//    }
//
//    public boolean onOptionsItemSelected(MenuItem item) {
//        // :( Parsing error. Please contact me.
//    }
//
//    private void ad() {
//        if(Q != null) {
//            Map<String, String> extra = Q.localExtras();
//            if((extra != null) && (extra.containsKey("setting_app_new"))) {
//                extra.remove("setting_app_new");
//                Q.updateLocalExtras(extra);
//                invalidateOptionsMenu();
//            }
//        }
//    }
//
//    private void d(long messageId) {
//        if(Q != null) {
//            Map<String, String> extra = Q.localExtras();
//            if((extra != null) && (extra.containsKey("announceUnread"))) {
//                if(messageId > 0x0) {
//                    if(String.valueOf(messageId).equals(extra.get("announceUnread"))) {
//                        extra.remove("announceUnread");
//                        extra.remove("announceUnreadCreateTime");
//                        Q.updateLocalExtras(extra);
//                        invalidateOptionsMenu();
//                    }
//                    return;
//                }
//                extra.remove("announceUnread");
//                extra.remove("announceUnreadCreateTime");
//                Q.updateLocalExtras(extra);
//                invalidateOptionsMenu();
//            }
//        }
//    }
//
//    class a implements ClipboardManager.OnPrimaryClipChangedListener {
//        private ClipboardManager b;
//
//        private a(ChatMsgActivity p1) {
//            b = 0x0;
//        }
//
//        public void a() {
//            if(b == null) {
//                b = (ClipboardManager)a.getApplicationContext().getSystemService("clipboard");
//                if(b != null) {
//                    b.addPrimaryClipChangedListener(this);
//                }
//            }
//        }
//
//        public void b() {
//            if(b != null) {
//                b.removePrimaryClipChangedListener(this);
//                b = 0x0;
//            }
//        }
//
//        public void onPrimaryClipChanged() {
//            if((!k(a).isEmpty()) && (b != null)) {
//                CharSequence sequence = b.getText();
//                if(sequence != null) {
//                    String value = sequence.toString();
//                    if(!TextUtils.isEmpty(value)) {
//                        String newValue = vn.a(value.toString(), k(a));
//                        if(!value.equals(newValue)) {
//                            b.setText(newValue);
//                        }
//                    }
//                }
//            }
//        }
//    }
//}
